name: CI

on:
  push:
    branches:
      - dev
      - master
      - ci-testing

# only run the latest commit to avoid cache overwrites
concurrency:
  group: ${{ github.ref }}
  cancel-in-progress: true

env:
  PYTHON_VERSION: 3.9

jobs:
  multi_arch_build:
    runs-on: ubuntu-latest
    name: Image Build
    permissions:
      packages: write
    steps:
      - name: Remove unnecessary files
        run: |
          sudo rm -rf /usr/share/dotnet
          sudo rm -rf /usr/local/lib/android
          sudo rm -rf /opt/ghc
      - name: Check out code
        uses: actions/checkout@v3
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Log in to the Container registry
        uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Create version file
        run: make version
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: |
            ghcr.io/${{ github.repository }}
          tags: |
            type=ref,event=branch  # add branch tag
            type=sha,prefix={{branch}}-  # add commit sha tag
      - name: Docker meta
        id: meta-tensorrt
        uses: docker/metadata-action@v4
        with:
          images: |
            ghcr.io/${{ github.repository }}
          tags: |
            type=ref,event=branch,suffix=-tensorrt
            type=sha,prefix={{branch}}-,suffix=-tensorrt
      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          platforms: linux/amd64,linux/arm64
          target: frigate
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
      - name: Build and push TensorRT
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          platforms: linux/amd64
          target: frigate-tensorrt
          tags: ${{ steps.meta-tensorrt.outputs.tags }}
          labels: ${{ steps.meta-tensorrt.outputs.labels }}
          cache-from: type=gha
